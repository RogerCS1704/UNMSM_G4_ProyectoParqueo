/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package g4.proyectoparqueadero;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Orestes
 */
public class Lista extends javax.swing.JFrame {

    Conexion conexion;
    private String historial[][];
    private int filas, columnas = 7;
    
    public Lista(Conexion conexion) {
        this.conexion = conexion;
        initComponents();
        listarParqueos();
        
    }
    //Construimos una matriz para luego pasar los datos al JTable
    public void construirMatriz() {
        this.historial = new String[this.filas][this.columnas];
        DefaultTableModel model = (DefaultTableModel) jTableLista.getModel();
        model.setRowCount(this.filas);
        model.setColumnCount(this.columnas);
    }
    
    //Listamos los parqueos realizando la consulta a la tabla parqueo de la BD
    public void listarParqueos(){
        int contador = 0;
        try {
            //Preparamos la consulta a realizar en la BD
            PreparedStatement ps = this.conexion.getConexion().prepareStatement("select * from parqueo");
            ResultSet rs = ps.executeQuery();           
            while (rs.next())
            {
                contador++;
            }
            this.filas = contador;
            construirMatriz();
            llenarMatriz();
            
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }   
    }
    
    //Llenamos la matriz y pasamos los valores al JTable
    public void llenarMatriz(){
        try {
            //Preparamos la consulta a realizar a la BD
            PreparedStatement ps = this.conexion.getConexion().prepareStatement("select * from parqueo");
            ResultSet rs = ps.executeQuery();  
            //Debido a que no queremos sacar todas las columnas de la BD (no todos los datos son necesarios a listar)
            //Creamos un vector auxiliar que solo guarde la informaci√≥n que necesitamos mostrar
            String aux[] = new String[this.columnas];
            int contador = 0;
            while (rs.next()){
                System.out.println("\n");
                aux[0] = rs.getString(2);          
                aux[1] = rs.getString(3);               
                aux[2] = rs.getString(4);
                aux[3] = rs.getString(5);
                aux[4] = rs.getString(6);
                aux[5] = rs.getString(7) + ":" + rs.getString(8);
                if(rs.getString(9).equals("")) aux[6] = "";
                else aux[6] = rs.getString(9) + ":" + rs.getString(10);
                
                for(int j = 0; j < this.columnas; j++)
                        this.historial[contador][j] = aux[j];
                contador++;
            }
            
            //Recorremos el JTable llenando con los datos de la matriz historial
            for(int i = 0; i < this.filas; i++)
                for(int j = 0; j < this.columnas; j++)
                    jTableLista.setValueAt(historial[i][j],i,j); 
          
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }   

              
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableLista = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setText("   Parqueadero Sanmarquino");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/g4/proyectoparqueadero/Icono (3).png"))); // NOI18N
        jLabel4.setMaximumSize(new java.awt.Dimension(200, 205));

        jLabel1.setText("Historial de parqueos:");

        jTableLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nombres", "Apellidos", "Placa", "Marca", "Modelo", "H. Entrada", "H.Salida"
            }
        ));
        jScrollPane2.setViewportView(jTableLista);

        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 28, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(287, 287, 287)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(293, 293, 293)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jButton1)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Menu abrir = new Menu();
        abrir.setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableLista;
    // End of variables declaration//GEN-END:variables
}
